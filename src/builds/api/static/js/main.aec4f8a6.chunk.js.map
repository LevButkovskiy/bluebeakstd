{"version":3,"sources":["components/Menu.js","components/RequestView.js","components/RequestParamView.js","components/routes/UserRoutes.js","components/routes/MetricsRoutes.js","components/routes/AuthRoutes.js","App.js","reportWebVitals.js","index.js"],"names":["Menu","props","handleClick","e","currentView","target","id","onChange","isSelected","value","renderElement","className","type","onClick","RequestView","method","url","description","children","RequestParamView","params","map","item","index","title","UserRoutes","MetricsRotes","AuthRoutes","App","useState","setCurrentView","currentViewId","renderView","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aec4f8a6.chunk.js","sourcesContent":["import React from 'react';\nimport './Menu.css';\n\nfunction Menu(props) {\n    const handleClick = (e) => {\n        let currentView = e.target.id;\n        props.onChange(currentView);\n    }\n\n    const isSelected = (id) => {\n        return id === props.value ? \"selected\" : null;\n    }\n\n    const renderElement = (id) => {\n        return <li className=\"menuElement\" id={id} type={isSelected(id)} onClick={handleClick}>{id}</li>\n    }\n\n\n    return (\n        <div className='menu'>\n            <h2 id='title'>BlueBeakStd API</h2>\n            <ul className=\"menuCategory\">\n                {renderElement('metrics')}\n                {renderElement('user')}\n                {renderElement('auth')}\n            </ul>\n        </div>\n    )\n}\n\nexport default Menu;","import React from 'react';\nimport './RequestView.css'\n\nfunction RequestView(props) {\n    return (\n        <div className=\"request\">\n            <span className=\"requestMethod\">{props.method}</span>\n            <span className=\"requestUrl\">{props.url}</span>\n            <span className=\"requestDescription\">{props.description}</span>\n            <div className=\"requestContent\">\n                {props.children}\n            </div>\n        </div>\n    )\n}\n\nexport default RequestView;","import React from 'react';\nimport './RequestParamView.css'\n\nfunction RequestParamView(props) {\n    const {params} = props;\n\n    const renderParams = (item, index) => {\n        return <blockquote key={index}>{item.title}:{item.value}</blockquote>\n    }\n\n    return (\n        <div className=\"requestParams\">\n            <span className=\"requestParamsTitle\">{props.children}</span><br/><br/>\n            <div className=\"requestParamsList\">\n                <code>\n                    {'{'}\n                    {params.map(renderParams)}\n                    {'}'}\n                </code>\n            </div>\n        </div>\n    )\n}\n\nexport default RequestParamView;","import React from 'react';\nimport RequestView from \"../RequestView\";\nimport RequestParamView from \"../RequestParamView\";\n\nfunction UserRoutes() {\n    return (\n        <ul>\n            <li>\n                <RequestView\n                    method=\"GET\"\n                    url=\"/v1/user/\"\n                    description=\"Returns all users\"\n                >\n                    <RequestParamView params={[{title: 'api-token', value: '[your-api-token]'}]}>Headers</RequestParamView>\n                </RequestView>\n            </li>\n            <li>\n                <RequestView\n                    method=\"GET\"\n                    url=\"/v1/user/:id\"\n                    description=\"Returns user by id\"\n                >\n                    <RequestParamView params={[{title: 'api-token', value: '[your-api-token]'}]}>Headers</RequestParamView>\n                    <RequestParamView params={[{title: 'id', value: '[user-id]'}]}>Params</RequestParamView>\n                </RequestView>\n            </li>\n            <li className=\"request\">\n                <RequestView\n                    method=\"POST\"\n                    url=\"/v1/user/\"\n                    description=\"Creates new user\"\n                >\n                    <RequestParamView params={[{title: 'api-token', value: '[your-api-token]'}]}>Headers</RequestParamView>\n                    <RequestParamView params={[{title: 'login', value: '[user-login]'}, {title: 'password', value: '[user-password]'}]}>Params</RequestParamView>\n                </RequestView>\n            </li>\n            <li className=\"request\">\n                <RequestView\n                    method=\"PUT\"\n                    url=\"/v1/user/:id\"\n                    description=\"Updates user by id\"\n                >\n                    <RequestParamView params={[{title: 'api-token', value: '[your-api-token]'}]}>Headers</RequestParamView>\n                    <RequestParamView params={[{title: 'id', value: '[user-id]'}]}>Params</RequestParamView>\n                </RequestView>\n            </li>\n            <li className=\"request\">\n                <RequestView\n                    method=\"DELETE\"\n                    url=\"/v1/user/:id\"\n                    description=\"Delete user by id\"\n                >\n                    <RequestParamView params={[{title: 'api-token', value: '[your-api-token]'}]}>Headers</RequestParamView>\n                    <RequestParamView params={[{title: 'id', value: '[user-id]'}]}>Params</RequestParamView>\n                </RequestView>\n            </li>\n        </ul>\n    )\n}\n\nexport default UserRoutes;","import React from 'react';\nimport RequestView from \"../RequestView\";\n\nfunction MetricsRotes() {\n    return (\n        <ul>\n            <li>\n                <RequestView\n                    method=\"GET\"\n                    url=\"/v1/health/\"\n                    description=\"Returns all users\"\n                >\n                </RequestView>\n            </li>\n            <li className=\"request\">\n                <RequestView\n                    method=\"POST\"\n                    url=\"/v1/version/\"\n                    description=\"Creates new user\"\n                >\n                </RequestView>\n            </li>\n        </ul>\n    )\n}\n\nexport default MetricsRotes;","import React from 'react';\nimport RequestView from \"../RequestView\";\nimport RequestParamView from \"../RequestParamView\";\n\nfunction AuthRoutes() {\n    return (\n        <ul>\n            <li className=\"request\">\n                <RequestView\n                    method=\"POST\"\n                    url=\"/v1/auth\"\n                    description=\"Authorize user and returns token\"\n                >\n                    <RequestParamView params={[{title: 'login', value: '[user-login]'}, {title: 'password', value: '[user-password]'}]}>Params</RequestParamView>\n                </RequestView>\n            </li>\n        </ul>\n    )\n}\n\nexport default AuthRoutes;","import React, { useState } from \"react\";\nimport './App.css';\n\nimport Menu from \"./components/Menu\";\nimport UserRoutes from \"./components/routes/UserRoutes\";\nimport MetricsRotes from \"./components/routes/MetricsRoutes\";\nimport AuthRoutes from \"./components/routes/AuthRoutes\";\n\nfunction App(props) {\n    const [currentView, setCurrentView] = useState('metrics');\n\n    const renderView = () => {\n        switch (currentView) {\n            case 'user': return <UserRoutes />;\n            case 'auth': return <AuthRoutes />;\n            case 'metrics': return <MetricsRotes />;\n            default: return '';\n        }\n    }\n\n    const onMenuChange = (currentViewId) => {\n        setCurrentView(currentViewId);\n    }\n\n    return (\n      <div className='skeleton'>\n          <Menu onChange={onMenuChange} value={currentView}/>\n          <div className=\"content\">\n              <div className=\"header\">\n                  <span id='title'>{currentView}</span>\n              </div>\n              <hr className=\"line\"/>\n              <div className=\"data\">\n                  {renderView()}\n              </div>\n          </div>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}